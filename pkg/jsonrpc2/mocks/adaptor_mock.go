// Code generated by MockGen. DO NOT EDIT.
// Source: ../adaptor.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	jsonrpc2 "github.com/black-desk/notels/pkg/jsonrpc2"
	gomock "github.com/golang/mock/gomock"
)

// MockAdaptor is a mock of Adaptor interface.
type MockAdaptor struct {
	ctrl     *gomock.Controller
	recorder *MockAdaptorMockRecorder
}

// MockAdaptorMockRecorder is the mock recorder for MockAdaptor.
type MockAdaptorMockRecorder struct {
	mock *MockAdaptor
}

// NewMockAdaptor creates a new mock instance.
func NewMockAdaptor(ctrl *gomock.Controller) *MockAdaptor {
	mock := &MockAdaptor{ctrl: ctrl}
	mock.recorder = &MockAdaptorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdaptor) EXPECT() *MockAdaptorMockRecorder {
	return m.recorder
}

// Method mocks base method.
func (m *MockAdaptor) Method(arg0 string) jsonrpc2.Method {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Method", arg0)
	ret0, _ := ret[0].(jsonrpc2.Method)
	return ret0
}

// Method indicates an expected call of Method.
func (mr *MockAdaptorMockRecorder) Method(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Method", reflect.TypeOf((*MockAdaptor)(nil).Method), arg0)
}
